<template>
    <page-dialog v-model="dialog" :title="comTitle"
                 size="large"
                 :close-on-click-modal="false">
        <div class="mt-lg">
            <card-component v-for="(item,index) in detailList"
                            :key="item.value" class="mt-sm"
                            @close-cur="close_cur(index)">
                <el-row class="mt-sm">
                    <el-col :span="3">
                        <div class="m">SPU:【{{item.spu}}】</div>
                        <img width="100px" height="100px"
                             :src="item.thumb">
                    </el-col>
                    <el-col :span="21">
                        <div class="mb-sm">{{item.title_zh}}</div>
                        <div class="mb-sm">{{get_enTitle(item)}}
                            <b class="ml-lg" v-if="get_enTitle(item).length>=0">（ <span :class="[get_enTitle(item).length>75?'red':'']">{{get_enTitle(item).length}}</span>/75 ）</b>
                        </div>
                        <move-title :source-data="item.sourceData" ></move-title>
                    </el-col>
                </el-row>
            </card-component>
        </div>
        <div slot="footer">
            <request-button req-key="api_batch_save_title"
                            :mintime="300"
                            @click="submit">确定</request-button>
            <!--<el-button type="primary" size="mini"-->
                       <!--@click.native="submit"-->
                       <!--class="inline">确定</el-button>-->
            <el-button size="mini" @click.native="close_dialog"
                       class="inline">关闭</el-button>
        </div>
    </page-dialog>
</template>
<style lang="stylus">

</style>
<script>
    import {api_batch_save_title} from '@/api/ebay-title-key';
    export default{
        data(){
            return{
                dialog:this.value,
                cardList:[
                    {label:'cehs1',value:1},
                    {label:'cehs2',value:2},
                    {label:'cehs3',value:3},
                ],
            }
        },
        methods:{
            get_enTitle(item){
                let value = [];
                if(item&&item.sourceData){
                    value = [...item.sourceData.frontList,...item.sourceData.middleList,...item.sourceData.backList].map(row=>row.name);
                }
                return value.join(' ');
            },
            close_dialog(){
                this.dialog = false;
            },
            submit(){
                let find = this.detailList.find(row=>{
                    return this.get_enTitle(row)&&this.get_enTitle(row).length>75
                });
                if(find){
                    return this.$message({type:'warning',message:`SPU：${find.spu}，最新标题字符数已超过75个，当前字符数为${this.get_enTitle(find).length},请修改！`});
                }
                let data = this.detailList.map(row=>{
                    let titles = {
                        en:{
                            front:row.sourceData.frontList.map(item=>item.name),
                            middle:row.sourceData.middleList.map(item=>item.name),
                            back:row.sourceData.backList.map(item=>item.name)
                        }
                    };
                    return {
                        id:row.id,
                        goods_id:row.goods_id,
                        titles:titles
                    }
                });
                this.$http(api_batch_save_title,{data:data}).then(res => {
                    this.$message({type:'success',message:res.message||res});
                    this.$emit('submit',data);
                    this.dialog = false;
                }).catch(code => {
                    this.$message({type:'error',message:code.message||code});
                }).finally(()=>{
                    this.$reqKey('api_batch_save_title',false)
                })
            },
            close_cur(index){
                this.detailList.splice(index,1)
            },
        },
        computed:{
            comTitle(){
                let title = '暂无数据';
                if(this.detailList&&this.detailList.length>0){
                    let spu = this.detailList.map(row=>row.spu).join(',');
                    title = `批量编辑SPU:${spu}标题`
                }
                return title;
            },
        },
        watch:{
            dialog(val){
                this.$emit('input',val);
            },
            value(val){
                this.dialog = val;
            }
        },
        props:{
            value:{},
            detailList:{}
        },
        components:{
            pageDialog:require('@/components/page-dialog.vue').default,
            cardComponent:require('./card-component.vue').default,
            tag:require('./tag.vue').default,
            moveTitle:require('./move-title.vue').default,
        }
    }
</script>