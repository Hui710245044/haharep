<template>
    <page class="p-index over-flow-auto">
        <card-search :form="form" :clears="clears" @search="search"></card-search>
        <div class="mt-sm mb-sm ml-sm">
            <permission tag="ElButton"
                        size="mini" type="primary"
                        @click.native="batch_change_title"
                        :route="apis.url_batch_save_title">批量标题修改</permission>
        </div>
        <table-list :loading="loading"
                    :first-time="firstTime"
                    :tableData="tables"
                    @selection-change="selection_change"
                    @edit="edit"></table-list>
        <edit-title v-model="show" :title="title"
                    @size-change="size_change"
                    @current-change="current_change"
                    :title-list="titleList"
                    :einfo="info" @search="search"
                    :spuId="spuId"></edit-title>
        <batch-change-title v-model="batchDialog"
                            :detail-list="choiceData"></batch-change-title>

    </page>
</template>

<script>
    import {api_ebay_titles,api_edit_ebay_titles,api_batch_edit_title,url_batch_save_title} from  '../../../../api/ebay-title-key'
    export default {
        permission:{
            url_batch_save_title
        },
        page:{
            devinfo:{
                frontEnd:'陆城锫',
                backEnd:'王留伟',
                creatTime:'2018-11-5',
                updateTime:'2018-11-10'
            }
        },
        data() {
            return {
                spuId:'',
                title:'',
                titleList:[],
                show:false,
                loading: false,
                firstTime: true,
                batchDialog:false,
                detailList:[],
                info:{},
                form: {
                    searchType:'spu',
                    searchContent:'',
                    localCategoryId:'',
                    startDate:(Date.now()-30*24*60*60*1000),
                    endDate:Date.now()
                },
                tables:{
                    page:1,
                    pageSize:50,
                    lists:[],
                    total:0
                },
                clears:{
                    searchType:'spu',
                    searchContent:'',
                    localCategoryId:'',
                },
                choiceData:[],
                goodsIds:[],
            }
        },
        mounted(){
            this.init()
        },
        methods: {
            batch_change_title(){
                if(this.goodsIds.length<=0)return this.$message({type:'warning',message:'请先选择需要批量更改的数据！'});
                this.batchDialog = true;
                let add_name = (list,isUpperCase)=>{
                    return list.map(row=>{
                        if(isUpperCase){
                            row = row.toString().substr(0,1).toUpperCase()+row.substr(1)
                        }
                        return {
                            name:row,
                            isSign:false,
                        }
                    })
                };
                this.choiceData = [];
                this.$http(api_batch_edit_title,{goodsIds:this.goodsIds}).then(res =>{
                    res.data.forEach(item=>{
                        if(item['titles']&&item['titles']['en']){
                            let obj = {
                                frontList:[],
                                middleList:[],
                                backList:[]
                            };
                            let titleStore = item['titles']['en']['titleStore'];
                            if(titleStore){
                                obj.frontList = add_name(titleStore['front'],false);
                                obj.middleList = add_name(titleStore['middle'],false);
                                obj.backList = add_name(titleStore['back'],false);

                            }else{
                                let enTitle = item['titles']['en'].titleStore||item['titles']['en'].originTitle;
                                let data = enTitle.split(' ').filter(row=>!!row);
                                obj.middleList = add_name(data,true);
                            }
                            this.$set(item,'sourceData',obj);
                        }
                    });
                    this.choiceData = res.data;
                }).catch(code => {
                    this.$message({type:'error',message:code.message||code})
                });
            },
            edit(val){
                this.spuId = `SPU：${val.spu}编辑标题`;
                this.$http(api_edit_ebay_titles,val.goods_id).then(res=>{
                   this.$nextTick(()=>{
                       this.info= res.data;
                       this.$set(this.info,'goods_id',val.goods_id);
                       this.show = true;
                   })
                })
            },
            search() {
                this.init()
            },
            init(){
                this.loading = true;
                let data = this.init_params();
                this.$http(api_ebay_titles,data).then(res=>{
                    this.tables.lists = res.data.list;
                    this.tables.lists.forEach(row=>{
                        let arr = row.name.split('|');
                        this.$set(row,'cnTitle',arr[0]);
                        this.$set(row,'enTitle',arr[1])
                    });
                    this.tables.total = res.data.count;
                    this.loading = false;
                    this.firstTime = false;
                }).catch(err=>{
                    this.loading = false;
                    this.firstTime = false;
                    console.log(err);
                })
            },
            init_params(){
                let data = {
                    searchType:this.form.searchType,
                    searchContent:this.form.searchContent,
                    localCategoryId:this.form.localCategoryId,
                    page:this.tables.page,
                    pageSize:this.tables.pageSize,
                };
                this.form.startDate&&(data.startDate=this.form.startDate);
                this.form.endDate&&(data.endDate = this.form.endDate);
                if (data.startDate) {
                    data.startDate = datef('YYYY-MM-dd', new Date(data.startDate).getTime()/1000);
                } else {
                    data.startDate = ''
                }
                if (data.endDate) {
                    data.endDate = datef('YYYY-MM-dd', new Date(data.endDate).getTime()/1000);
                } else {
                    data.endDate = ''
                }
                let curString = '';
                if (data.searchType === 'spu' || data.searchType === 'sku') {
                    curString = data.searchContent.replace(new RegExp('\n', 'gm'), '\n');
                    if(!!data.searchContent.length){
                        let cur = curString.split('\n').filter(row => !!row);
                        data.searchContent = cur.map(row=>{
                            return row.trim()
                        })
                    }else {
                        data.searchContent = ''
                    }
                } else {
                    curString = data.searchContent.replace(new RegExp(' ', 'gm'), '\n');
                    data.searchContent = data.searchContent.trim();
                }
                return data
            },
            size_change(val){
                this.tables.pageSize = val;
                this.init()
            },
            current_change(val){
                this.tables.page = val;
                this.init()
            },
            selection_change(val){
                this.goodsIds = val.map(row=>row.goods_id)||[];
            },
        },
        components:{
            cardSearch:require('./card-search').default,
            tableList:require('./table-list').default,
            editTitle:require('./edit-model').default,
            batchChangeTitle:require('./batch-change-title.vue').default,
        }
    }
</script>