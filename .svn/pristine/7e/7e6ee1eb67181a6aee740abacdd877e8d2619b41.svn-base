<template>
    <page-dialog v-model="visible"
                 class="p-server-management o-hidden"
                 :title="action.title"
                 :close-on-click-modal="false"
                 @open="open"
                 size="large">
        <div class="mb-sm">
            <el-button @click="add" type="primary" size="mini" class="ml-sm">添加</el-button>
            <el-button @click="batch_delete" type="primary" size="mini" v-if="!!selects.length">删除</el-button>
        </div>
        <!--<ui-table-->
                <!--v-if="manageData.length > 0"-->
                <!--v-model="checkAll"-->
                <!--@check="check(checkAll)"-->
                <!--:heads="heads">-->
            <!--<template v-resize="{height:200}">-->
                <!--<tr :class="[row.status===2?'bg-red':'']" v-for="(row, index) in manageData" :key="index">-->
                    <!--<td>-->
                        <!--<el-checkbox v-model="row.isCheck" @change="changeOne"></el-checkbox>-->
                    <!--</td>-->
                    <!--&lt;!&ndash;user_id&ndash;&gt;-->
                    <!--<td key="user">-->
                        <!--<scroll-select v-model="row.user" class="inline"-->
                                       <!--textAlign="left"-->
                                       <!--@select-user="selectUser"-->
                                       <!--ref="creater"-->
                                       <!--:remote="urlcreater"-->
                                       <!--:index="index"-->
                                       <!--:fix-params="fix_params_account"-->
                                       <!--:fixResult="fix_result_account">-->
                        <!--</scroll-select>-->
                    <!--</td>-->
                    <!--&lt;!&ndash;username&ndash;&gt;-->
                    <!--<td>-->
                        <!--<el-input v-model="row.username"></el-input>-->
                    <!--</td>-->
                    <!--&lt;!&ndash;操作&ndash;&gt;-->
                    <!--<td>-->
                        <!--<el-button-->
                                <!--@click="delete_account(index)"-->
                                <!--type="text"-->
                                <!--class="operate">-->
                            <!--删除-->
                        <!--</el-button>-->
                    <!--</td>-->
                <!--</tr>-->
            <!--</template>-->
        <!--</ui-table>-->
        <div :class="{'wrap':cloneData.length>0}">
            <el-table :data="cloneData"
                      v-if="cloneData.length > 0"
                      height="400"
                      @selection-change="select_change"
            >
                <el-table-column
                        type="selection"
                        width="40">
                </el-table-column>
                <el-table-column label="系统用户">
                    <template slot-scope="scope">
                        <scroll-select v-model="scope.row.user" class="inline"
                                       textAlign="left"
                                       @select-user="selectUser"
                                       ref="creater"
                                       :remote="urlcreater"
                                       :fix-params="fix_params_account"
                                       :fixResult="fix_result_account">
                        </scroll-select>
                    </template>
                </el-table-column>
                <el-table-column label="服务器登录用户名">
                    <template slot-scope="scope">
                        <el-input v-model="scope.row.username"></el-input>
                    </template>
                </el-table-column>
                <el-table-column label="操作">
                    <template slot-scope="scope">
                        <span class="operate" @click="delete_account(scope.$index,cloneData)">删除</span>
                    </template>
                </el-table-column>
            </el-table>
        </div>
        <div slot="footer" class="dialog-footer">
            <request-button req-key="mangeSure" @click="sure">保 存</request-button>
            <el-button size="mini" @click.native="visible = false">取 消</el-button>
        </div>
        <el-progress type="line"
                     :text-inside="true"
                     class="percent"
                     v-if="percentVisible"
                     :percentage="percent"
                     :status="percentStatus">
        </el-progress>
    </page-dialog>
</template>
<style lang="stylus">
    .p-server-management{
        .percent{
            z-index: 999;
            background-color: rgba(0,0,0,0.8);
            position: absolute;
            top:0;
            right:0;
            bottom:0;
            left:0;
            margin:auto;
        }
        .el-progress__text{
            color: white;
        }
        .el-progress-bar{
            width:50%;
        }
        .el-progress-bar__outer{
            width: 50%;
            height: 20px !important;
            position: absolute;
            top:0;
            right:0;
            bottom:0;
            left:0;
            margin:auto;
        }
    }
    .wrap{
        height: 400px;
        overflow: hidden;
    }
</style>
<script>
    import {api_post_account, api_get_user} from '../../../api/server-management'
    export default {
        data(){
            return {
                visible: false,
                checkAll:false,
                userList:[],
                heads:[
                    {isCheck:true,width:2},
                    {label:'系统用户',width:8,isRequired:true},
                    {label:'服务器登录用户名',width:8,isRequired:true},
                    {label:'操作',width:7},
                ],
                percentVisible:false,
                percent:0,
                percentStatus:'',
                urlcreater:'get|user',
                is_batch:false,
                selects:[],
                cloneData:[],
                index:0,
            }
        },
        mounted(){},
        methods: {
            //表头的 全选框
            // check(val){
            //     this.manageData.forEach(data => {
            //         data.isCheck = val
            //     });
            //     this.changeOne();
            // },
            // changeOne(){
            //     if (this.manageData.length > 0) {
            //         this.checkAll = !this.manageData.find(data => !data.isCheck);
            //     } else {
            //         this.is_batch = false;
            //     }
            //     for(let i = 0; i <　this.manageData.length; i++){
            //         if(this.manageData[i].isCheck){
            //             this.is_batch = true;
            //             break;
            //         } else {
            //             this.is_batch = false;
            //         }
            //     }
            // },
            open(){
                this.cloneData = [];
            },
            select_change(val){
                val.forEach(row=>{
                    this.cloneData.forEach(r=>{
                        if(r.index === row.index){
                            r.isCheck = true
                        }
                    })
                });
                this.selects = val;
                if(this.selects.length===this.cloneData.length){
                    this.is_batch = true
                }else {
                    this.is_batch = false
                };
            },
            delete_account(index,rows){
                rows.splice(index, 1);
                // this.changeOne();
            },
            selectable(row,index){
                console.log(row,index)
            },
            batch_delete(){
                if(this.is_batch){
                    this.selects = [];
                    this.cloneData = []
                }else {
                     this.selects.splice(this.selects.length-1,1);
                     this.cloneData = this.cloneData.filter(row=>row.isCheck===false);
                }
            },
            add(){
                let account = {
                    user:{
                        user_id:'',
                        user_label:''
                    },
                    username:'',
                    isCheck:false,
                    index:this.index++
                };
                 this.cloneData.push(account)
            },
            sure(){
                this.percent = 0;
                this.percentStatus = '';
                this.percentVisible = true;
                let timer = setInterval(()=>{
                    if(this.percent < 90){
                        this.percent++ ;
                    } else if(this.percent >= 90 && this.percent < 99){
                        clearInterval(timer);
                        timer = setInterval(()=>{
                            this.percent++;
                            if(this.percent >= 99){
                                clearInterval(timer);
                                this.percent = 99;
                            }
                        },500)
                    }
                }, 25);
                let user_data = this.cloneData.map(row=>{
                    if(row.user.value && row.username){
                        return {
                            user_id:row.user.value,
                            username:row.username,
                        }
                    } else {
                        this.$message({type:"warning",message:"请填写完整的信息"});
                    }
                });
                let params = {
                    server_id:this.action.server_id,
                    user_data:user_data
                };
                this.$http(api_post_account, params).then(res=>{
                    clearInterval(timer);
                    let timer2 = setInterval(()=>{
                        this.percent++;
                        if(this.percent >= 100){
                            clearInterval(timer2);
                            this.percentStatus = 'success';
                            setTimeout(()=>{
                                this.percentVisible = false;
                                this.visible = false;
                                this.$message({type:"success",message:res.message||res});
                            }, 500);
                        }
                    }, 10);
                }).catch(code=>{
                    clearInterval(timer);
                    this.percentStatus = 'exception';
                    setTimeout(()=>{
                        this.percentVisible = false;
                        this.$message({type:'error',message:code.message||code});
                    }, 500);
                }).finally(()=>{
                    setTimeout(() => {
                        this.$reqKey('mangeSure', false);
                    }, 300)
                })
            },
            //账号参数
            fix_params_account({page,pageSize,keyword}){
                return {
                    page:page,
                    pageSize:pageSize,
                    snText:keyword||"",
                    snType:"realname"
                };
            },
            //账号结果
            fix_result_account(res){
                return {
                    options: res.data.map(row => {
                        return {
                            label: row.realname,
                            value: row.id,
                            job_number: row.job_number
                        }
                    }),
                    page: res.page,
                    count: res.count,
                }
            },
            selectUser(item, index){
                let row = this.cloneData[index];
                row.username = `rondaful${item.job_number}`;
                this.cloneData.splice(index, 1, row);
            }
        },
        computed: {},
        watch: {
            visible(val){
                this.$emit('input',val);
            },
            value(val) {
                this.visible = val;
            },
        },
        props: {
            value:{},
            manageData:{},
            action:{}
        },
        components: {
            pageDialog:require("../../../components/page-dialog.vue").default,
            uiTable:require("../../../components/ui-table.vue").default,
            scrollSelect:require('../../../components/scroll-select.vue').default
        },
    }
</script>
