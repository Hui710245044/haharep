<template>
    <search-card @search="search" :clears="clears" :params="form">
        <label-item label="站点：" class="ml-sm">
            <el-select class="inline s-width-default"
                       @change="change_site"
                       v-model="form.site"
                       filterable v-sf.site>
                <el-option v-for="(item, index) in siteList"
                           :value="item.label"
                           :label="item.label"
                           :key="index"></el-option>
            </el-select>
        </label-item>
        <label-item label="账号简称：" class="mr-sm">
            <el-select class="inline s-width-default" v-model="form.account_id" placeholder="请先选择站点" v-sf.account_id
                       filterable>
                <el-option v-for="(item, index) in account"
                           :value="item.account_id"
                           :label="item.account_name"
                           :key="item.account_id"></el-option>
            </el-select>
        </label-item>
        <label-item class="ml-sm" label="销售员：">
            <param-account
                    class="s-width-default"
                    v-model="form.seller_id"
                    v-sf.saler
                    :fixResult="development_fix_result"
                    type="memberShipSales"
                    placeholder="请选择/输入..."
                    url="get|user/development/staffs">
            </param-account>
        </label-item>
        <label-item label="选择日期范围：">
            <el-date-picker
                    class="inline date"
                    v-model="form.start_time"
                    v-sf.date_b
                    :picker-options="pickerstart"
                    placeholder="开始时间">
            </el-date-picker><span>&nbsp;--&nbsp;</span><el-date-picker
                class="inline date mr-sm"
                v-model="form.end_time"
                v-sf.date_e
                :picker-options="pickerend"
                placeholder="结束时间">
        </el-date-picker>
        </label-item>
    </search-card>
</template>
<style scoped>

</style>
<script>
    import {api_has_publish_list, api_account_site,api_get_amazon_account} from '@/api/amazon-publish-list';
    import {api_get_amazon_site} from '@/api/store-captial-accounting'
    export default {
        data() {
            return {
                account: [],
                siteList:[],
                pickerstart: {
                    disabledDate: (time) => {
                        if (this.form.end_time) {
                            return time.getTime() > this.form.end_time;
                        } else {
                            return false;
                        }
                    }
                },

                pickerend: {
                    disabledDate: (time) => {
                        if (this.form.start_time&&time.getTime() < this.form.start_time) {
                            return time.getTime() < this.form.start_time;
                        } else {
                            return time.getTime() > Date.now();
                        }
                    }
                },
            }
        },
        created(){
            this.get_account();
            this.get_site();
        },
        methods: {
            search() {
                this.$emit('search')
            },
            get_site(){
                this.$http(api_get_amazon_site).then(res => {
                    this.siteList = [{label: '全部', value: ''},...res.site];
                }).catch(code => {
                    console.log(code);
                })
            },

            get_account(){
                this.$http(api_get_amazon_account,{site: this.form.site}).then(res => {
                    // this.account = res;
                    // this.searchData.account_id = this.account.length>0?this.account[0].account_id:'';
                    this.account = [{account_name: '全部', account_id: ''},...res];
                    this.form.account_id = this.account[0].account_id
                }).catch(code => {
                    this.$message({
                        type: "error",
                        message: code.message || code
                    });
                    this.account.splice(0, this.account.length);
                })
            },
            development_fix_result(res) {
                return res.map(row => {
                    return {
                        value: row.id,
                        label: row.realname
                    }
                })
            },
            change_site(val){
                if (!!val) {
                    this.get_account();
                } else {
                    this.account = [{account_name: '', account_id: ''}];
                    this.form.account_id = ''
                }
            }
        },
        props:{
            form:{},
            clears:{}
        },
        components:{
            searchCard:require('@/components/search-card').default,
            labelItem:require('@/components/label-item.vue').default,
            paramAccount: require('@/api-components/param-account').default,
        }
    }
</script>
